// Coloque o seu nome aqui: Lucas Augusto

/**
 * Memória de 512 registradores, cada um com 16 bits de largura.
 * A saída out reflete o valor armazenado no endereço de memória
 * especificado em adress. If load ==1, then o valor in é armazenado (loaded)
 * no endereço de memória especificado em adress (o valor carregado será
 * refletido na saída out a partir do próximo passo de tempo em diante).
 */

CHIP RAM512 {
    IN in[16], load, address[9];
    OUT out[16];

    PARTS:
    // Coloque o seu código aqui:
    DMux8Way(in=load, sel=address[6..8], a=r1, b=r2, c=r3, d=r4, e=r5, f=r6, g=r7, h=r8);
    RAM64(in=in, load=r1, address=address[0..5], out=rr1);
    RAM64(in=in, load=r2, address=address[0..5], out=rr2);
    RAM64(in=in, load=r3, address=address[0..5], out=rr3);
    RAM64(in=in, load=r4, address=address[0..5], out=rr4);
    RAM64(in=in, load=r5, address=address[0..5], out=rr5);
    RAM64(in=in, load=r6, address=address[0..5], out=rr6);
    RAM64(in=in, load=r7, address=address[0..5], out=rr7);
    RAM64(in=in, load=r8, address=address[0..5], out=rr8);
    Mux8Way16(a=rr1, b=rr2, c=rr3, d=rr4, e=rr5, f=rr6, g=rr7, h=rr8, sel=address[6..8], out=out);
}
